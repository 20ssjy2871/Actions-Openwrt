#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# File: .github/workflows/update-checker.yml
# Description: 
#  Check multiple repos to see if there is an update, if so, 
#  send corresponding repository_dispatch event to trigger certain Github actions
#

name: Update Checker

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 */18 * * *

jobs:
  check:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        REPO: [sdf8057/ipq6000, hanwckf/immortalwrt-mt798x, immortalwrt/immortalwrt, ophub/kernel]
        
    steps:
      - name: Check All Code Bases
        id: check
        env:
          REPO: ${{ matrix.REPO }}
        run: |
          export REPO_USER="$(echo $REPO | awk -F '/' '{print $1}')"
          echo "REPO_USER=$REPO_USER" >> $GITHUB_ENV
          export REPO_NAME="$(echo $REPO | awk -F '/' '{print $2}')"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          export SDF8057_BRANCH="main"
          export HANWCKF_BRANCH="openwrt-21.02"
          export IMMORTALWRT_BRANCH="master"
          export OPHUB_BRANCH="main"
          if [ $REPO_USER == sdf8057 ]
          then
            export BRANCH=$SDF8057_BRANCH
          elif [ $REPO_USER == hanwckf ]
          then
            export BRANCH=$HANWCKF_BRANCH
          elif [ $REPO_USER == ophub ]
          then
            export BRANCH=$OPHUB_BRANCH
          else
            export BRANCH=$IMMORTALWRT_BRANCH
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          
      - name: Get Commit Hash
        id: getHash
        env:
          REPO_USER: ${{ steps.check.outputs.REPO_USER }}
          REPO_NAME: ${{ steps.check.outputs.REPO_NAME }}
          REPO_BRANCH: ${{ steps.check.outputs.REPO_BRANCH }}
        run: |
          git clone --depth=1 https://github.com/$REPO_USER/$REPO_NAME -b $REPO_BRANCH $REPO_BRANCH
          echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Compare Commit Hash
        id: cacheHash
        uses: actions/cache@main
        with:
          path: .${{ steps.check.outputs.REPO_USER }}.commitHash
          key: HEAD-${{ steps.getHash.outputs.commitHash }}

      - name: Save New Commit Hash
        if: steps.cacheHash.outputs.cache-hit != 'true'
        run: |
          echo ${{ steps.getHash.outputs.commitHash }} | tee .${{ steps.check.outputs.REPO_USER }}.commitHash

      - name: Trigger build
        if: steps.cacheHash.outputs.cache-hit != 'true'
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.ACTIONS_TRIGGER }}
          event-type: "Source_Code_Update_${{ steps.check.outputs.REPO_USER }}"

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 1
